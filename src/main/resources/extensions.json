[
  {
    "id": "http",
    "type": "http",
    "configuration": {
      "deviceTypeConfigurations": [
        {
          "deviceTypeId": "58ac4b889058c24616a43b3b",
          "token": "TOKEN",
          "converters": [
            {
              "deviceNameJsonExpression": "${$.device}",
              "attributes": [
                {
                  "type": "string",
                  "key": "lat",
                  "value": "${$.lat}"
                },
                {
                  "type": "string",
                  "key": "lng",
                  "value": "${$.lng}"
                }
              ],
              "timeseries": [
                {
                  "type": "double",
                  "key": "temperature",
                  "value": "${$.data.temperature}",
                  "transformer": {
                    "type": "intToDouble"
                  }
                },
                {
                  "type": "double",
                  "key": "humidity",
                  "value": "${$.data.humidity}",
                  "transformer": {
                    "type": "intToDouble"
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "id": "file",
    "type": "file",
    "configuration": {
      "fileMonitorConfigurations": [
        {
          "file": "/tmp/test.dat",
          "skipLines": 1,
          "updateInterval": 10000,
          "csvColumns": [
            "ts",
            "device",
            "type",
            "temperature",
            "humidity"
          ],
          "converter": {
            "deviceNameJsonExpression": "${$.device}",
            "deviceTypeJsonExpression": "${$.type}",
            "attributes": [],
            "timeseries": [
              {
                "type": "double",
                "ts": "${$.ts}",
                "tsFormat": "yyyy-MM-dd HH:mm:ss",
                "key": "temperature",
                "value": "${$.temperature}"
              },
              {
                "type": "double",
                "ts": "${$.ts}",
                "tsFormat": "yyyy-MM-dd HH:mm:ss",
                "key": "humidity",
                "value": "${$.humidity}"
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": "mqtt",
    "type": "mqtt",
    "configuration": {
      "brokers": [
        {
          "host": "localhost",
          "port": 1883,
          "ssl": false,
          "retryInterval": 3000,
          "credentials": {
            "type": "anonymous"
          },
          "mapping": [
            {
              "topicFilter": "sensors",
              "converter": {
                "type": "json",
                "filterExpression": "",
                "deviceNameJsonExpression": "${$.serialNumber}",
                "attributes": [
                  {
                    "type": "string",
                    "key": "model",
                    "value": "${$.model}"
                  }
                ],
                "timeseries": [
                  {
                    "type": "double",
                    "key": "temperature",
                    "value": "${$.temperature}"
                  }
                ]
              }
            },
            {
              "topicFilter": "sensor/+/temperature",
              "converter": {
                "type": "json",
                "filterExpression": "",
                "deviceNameTopicExpression": "(?<=sensor/)(.*?)(?=/temperature)",
                "timeout": 60000,
                "timeseries": [
                  {
                    "type": "double",
                    "key": "temperature",
                    "value": "${$.value}"
                  }
                ]
              }
            }
          ],
          "connectRequests": [
            {
              "topicFilter": "sensors/connect",
              "deviceNameJsonExpression": "${$.serialNumber}"
            },
            {
              "topicFilter": "sensor/+/connect",
              "deviceNameTopicExpression": "(?<=sensor/)(.*?)(?=/connect)"
            }
          ],
          "disconnectRequests": [
            {
              "topicFilter": "sensors/disconnect",
              "deviceNameJsonExpression": "${$.serialNumber}"
            },
            {
              "topicFilter": "sensor/+/disconnect",
              "deviceNameTopicExpression": "(?<=sensor/)(.*?)(?=/disconnect)"
            }
          ],
          "attributeRequests": [
            {
              "topicFilter": "sensors/attributes",
              "deviceNameJsonExpression": "${$.serialNumber}",
              "attributeKeyJsonExpression": "${$.key}",
              "requestIdJsonExpression": "${$.requestId}",
              "clientScope": false,
              "responseTopicExpression": "sensors/${deviceName}/attributes/${responseId}",
              "valueExpression": "{\"${attributeKey}\":\"${attributeValue}\"}"
            },
            {
              "topicFilter": "sensors/+/attributes/+/request/+",
              "deviceNameTopicExpression": "(?<=sensors/)(.*?)(?=/attributes)",
              "attributeKeyTopicExpression": "(?<=attributes/)(.*?)(?=/request)",
              "requestIdTopicExpression": "(?<=request/)(.*?)($)",
              "clientScope": false,
              "responseTopicExpression": "sensors/${deviceName}/attributes/${attributeKey}/response/${requestId}",
              "valueExpression": "${attributeValue}"
            }
          ],
          "attributeUpdates": [
            {
              "deviceNameFilter": ".*",
              "attributeFilter": ".*",
              "topicExpression": "sensor/${deviceName}/${attributeKey}",
              "valueExpression": "{\"${attributeKey}\":\"${attributeValue}\"}"
            }
          ],
          "serverSideRpc": [
            {
              "deviceNameFilter": ".*",
              "methodFilter": "echo",
              "requestTopicExpression": "sensor/${deviceName}/request/${methodName}/${requestId}",
              "responseTopicExpression": "sensor/${deviceName}/response/${methodName}/${requestId}",
              "responseTimeout": 10000,
              "valueExpression": "${params}"
            },
            {
              "deviceNameFilter": ".*",
              "methodFilter": "no-reply",
              "requestTopicExpression": "sensor/${deviceName}/request/${methodName}/${requestId}",
              "valueExpression": "${params}"
            }
          ]
        }
      ]
    }
  },
  {
    "id": "opc",
    "type": "opc",
    "configuration": {
      "servers": [
        {
          "applicationName": "Thingsboard OPC-UA client",
          "applicationUri": "",
          "host": "localhost",
          "port": 49320,
          "scanPeriodInSeconds": 10,
          "timeoutInMillis": 5000,
          "security": "Basic128Rsa15",
          "identity": {
            "type": "anonymous"
          },
          "keystore": {
            "type": "PKCS12",
            "location": "example.pfx",
            "password": "secret",
            "alias": "gateway",
            "keyPassword": "secret"
          },
          "mapping": [
            {
              "deviceNodePattern": "Channel1\\.Device\\d+$",
              "deviceNamePattern": "Device ${_System._DeviceId}",
              "attributes": [
                {
                  "key": "Tag1",
                  "type": "string",
                  "value": "${Tag1}"
                }
              ],
              "timeseries": [
                {
                  "key": "Tag2",
                  "type": "long",
                  "value": "${Tag2}"
                }
              ]
            }
          ]
        }
      ]
    }
  }
]